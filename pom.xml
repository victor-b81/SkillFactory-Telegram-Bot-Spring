<?xml version="1.0" encoding="UTF-8"?>
<!-- Данный pom.xml фаил собран по средствам генератора https://start.spring.io/ -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Указываем родительский pom.xml -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.1</version>
		<relativePath/> <!-- Указываем, что родительский pom.xml находится в репозиториях maven -->
	</parent>

	<!-- Указываем имя проекта -->
	<groupId>ru.SkillFactorydemo</groupId>
	<artifactId>tgbot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>tgbot</name>
	<description>Telegram bot for finance monitoring</description>

	<!-- Указываем версию java -->
	<properties>
		<java.version>11</java.version>
		<testcontainers.version>1.17.6</testcontainers.version>
	</properties>

	<!-- Указываем зависимости -->
	<dependencies>
		<!-- Starter модули -->
		<!-- Spring Boot Actuator — это библиотека, которая позволяет мониторить приложение в production-среде -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<!-- Starter для доступа к базе данных -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- Starter для создания web, включая RESTful, приложений, используя Spring MVC. Использует Tomcat как встроенный контейнер по умолчанию -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- Starter для тестирования Spring Boot приложений с библиотеками JUnit, Hamcrest и Mockito -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Starter для использования Spring Web Services -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<!-- Starter(сторонний) spring boot, позволяет автоматически регистрировать ботов в контексте Spring, -->
		<!-- а также использовать их как стандартные bean-компоненты Spring. -->
		<dependency>
			<groupId>com.github.xabgesagtx</groupId>
			<artifactId>telegram-spring-boot-starter</artifactId>
			<version>0.26</version>
		</dependency>
		<!-- Модули JAXB -->
		<!-- JAXB API - автоматизация работы между документами XML и объектами Java. -->
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- JAXB ядро(старый модуль) - Содержит исходные коды, необходимые модулям XJC, JXC и Runtime с зависимостями.	-->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- JAXB Runtime(старая среда выполнения). Содержит исходники, необходимые для обработки во время выполнения. -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- Модули JAX-WS -->
		<!-- JAX-WS (JSR 224) API для работы веб-служб на основе XML (JAX-WS) 2.0. -->
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- JAX WS RI - среда выполнения JAX-WS Runtime -->
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- JAX WS RI инструменты - эталонная реализация JSR-224 с открытым исходным кодом: Java API для веб-служб XML.(wsimport) -->
		<!-- <scope>compile</scope> для компиляции -->
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-tools</artifactId>
			<version>2.3.1</version>
			<scope>compile</scope>
		</dependency>
		<!-- Дополнительные зависимости -->
		<!-- lombok - автоматическое управление ресурсами, создание геттеров, сеттеров, равных, hashCode и toString и др. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.22</version>
			<optional>true</optional>
		</dependency>
		<!-- Изолированное управление контейнерами для тестирования кода Java-->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
		</dependency>
		<!-- Драйвер PostgreSQL JDBC Driver Postgresql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.18</version>
		</dependency>
		<!-- Hibernate СУБД hsqldb -->
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
		</dependency>
		<!-- Дополнительные зависимости -->
		<!-- Активация JavaBeans(TM) используется API JavaMail(TM) для управления данными MIME. -->
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- Apache Commons Lang, пакет служебных классов Java для классов, которые находятся в иерархии java.lang -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.11</version>
		</dependency>
		<!-- Общая функциональность привязки данных для Jackson: работает с основным потоковым API. -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.11.2</version>
		</dependency>
		<!-- Swagger ядро -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
		<!-- Swagger графический интерфейс -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.6.1</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<!-- Решение поставляемое генератором spring -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
